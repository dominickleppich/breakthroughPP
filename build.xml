<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="breakthroughPP" default="all" basedir=".">
	<!-- Settings -->
	<property name="main.class" value="breakthroughPP.Boot" />

	<property name="debuglevel" value="source,lines,vars" />
	<property name="target.jre" value="1.7" />
	<property name="source.jre" value="1.7" />
	<property name="launch4jpath" value="D:/Launch4j" />
	<property name="launch4jconfigfile" value="release.xml" />

	<property name="source.dir" location="source" />
	<property name="build.dir" location="build" />
	<property name="javadoc.dir" location="documentation" />
	<property name="jar.dir" location="dist" />
    <property name="project.name" value="breakthroughPP" />
    <property name="blackbox.name" value="breakthroughPP-blackbox" />
	<property name="obfuscated.name" value="breakthroughPP-obfuscated" />
	<property name="release.dir" location="release" />
	<property name="resource.dir" location="resource" />
	<property name="lib.dir" location="lib" />

	<path id="userclasspath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- Do everything -->
	<target depends="javadoc,build,release" name="all" />

	<!-- ************************ Init stuff ************************ -->
	<!-- Get newest needed libraries -->
	<target name="update-lib">
		<delete dir="${lib.dir}" />
		<mkdir dir="${lib.dir}" />
		<copy todir="${lib.dir}">
			<fileset dir="../FrozenCube/dist" />
		</copy>
	</target>

	<!-- Clean -->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${javadoc.dir}" />
		<delete dir="${jar.dir}" />
		<delete dir="${release.dir}" />
	</target>

	<!-- ************************ Create JavaDoc documentation ************************ -->
	<target description="create javadoc documentation" name="javadoc">
		<mkdir dir="${javadoc.dir}" />
		<javadoc access="private" author="true" destdir="${javadoc.dir}" source="1.7" sourcepath="src" version="true">
			<classpath refid="userclasspath" />
			<fileset dir="${source.dir}" defaultexcludes="yes">
				<include name="**/*.java" />
				<exclude name="breakthroughPP/test/**" />
			</fileset>
		</javadoc>
	</target>

	<!-- ************************ Release ************************ -->
	<!-- Create windows executable (using Launch4j) -->
	<target description="create exe file" name="exe">
		<echo message="Creating executable file" />
		<echo message="Executing ${launch4jpath}/Launch4jc.exe ${launch4jconfigfile}" />
		<exec executable="${launch4jpath}/Launch4jc.exe">
			<arg value="${launch4jconfigfile}" />
		</exec>
	</target>

	<!-- Pack all release files into a zip archive -->
	<target description="create zip archive" name="zip">
		<zip destfile="${release.dir}/${project.name}.zip" basedir="${release.dir}" />
	</target>

	<!-- Prepare for release (create jar archive and documentation) -->
	<target description="init release" depends="jar, javadoc" name="release_init">
		<delete dir="${release.dir}" />
		<mkdir dir="${release.dir}" />
		<!-- Copy needed libraries -->
		<copy todir="${release.dir}/lib">
			<fileset dir="${lib.dir}">
				<!-- exclude unneeded jar files -->
				<exclude name="*-javadoc.jar" />
				<exclude name="*-source*.jar" />
				<exclude name="*-junit.jar" />
				<exclude name="*-contrib.jar" />
			</fileset>
		</copy>
		<!-- Copy compiled game -->
		<copy todir="${release.dir}">
			<fileset dir="${jar.dir}" />
		</copy>
		<!-- Create source code jar archive -->
		<jar compress="true" destfile="${release.dir}/${project.name}-source.jar" basedir="${source.dir}" />
		<!-- Copy documentation and pack into jar archive -->
		<jar compress="true" destfile="${release.dir}/${project.name}-javadoc.jar" basedir="${javadoc.dir}" />
		<!-- Copy resources -->
		<copy todir="${release.dir}/res">
			<fileset dir="${resource.dir}" />
		</copy>
	</target>

	<!-- Create full windows release -->
	<target depends="release" name="release_windows">
		<antcall target="exe" />
	</target>
	
	<!-- Create full release -->
	<target depends="release_init" name="release">
		<antcall target="zip" />
	</target>

	<!-- ************************ Create jar archive ************************ -->
	<target description="create jar files" depends="build" name="jar">
		<mkdir dir="${jar.dir}" />
		<jar compress="true" destfile="${jar.dir}/${project.name}.jar" basedir="${build.dir}" excludes="**/blackbox,**/blackbox/**/*.class">
			<manifest>
				<attribute name="Main-Class" value="${main.class}" />
				<attribute name="Class-Path" value=". lib/FrozenCube.jar" />
			</manifest>
		</jar>
	</target>

    <target description="create blackbox jar" depends="build" name="blackbox-jar">
        <mkdir dir="${jar.dir}" />
        <jar compress="true" destfile="${jar.dir}/${blackbox.name}.jar" basedir="${build.dir}" includes="**/preset/**/*.class,**/blackbox/**/*.class">
            <manifest>
                <attribute name="Main-Class" value="breakthroughPP.blackbox.Start" />
            </manifest>
        </jar>
    </target>

	<target depends="blackbox-jar" name="blackbox">
		<echo>Obfuscating blackbox code...</echo>
		<taskdef name="yguard" classname="com.yworks.yguard.YGuardTask" classpath="yGuard/lib/yguard.jar" />
		<yguard>
			<inoutpair in="${jar.dir}/${blackbox.name}.jar" out="${jar.dir}/${obfuscated.name}.jar"/>

            <obfuscate mainclass="breakthroughPP.blackbox.Start" replaceclassnamestrings="true">
                <property name="error-checking" value="pedantic"/>
                <property name="naming-scheme" value="bestWill"/>
                <property name="language-conformity" value="illegalWill"/>
                <property name="overload-enabled" value="true"/>
                <property name="digest" value="SHA-1"/>
                <keep>
                    <class name="breakthroughPP.preset.*" classes="private" methods="private" fields="private"/>
                </keep>
            </obfuscate>
			</yguard>
	</target>

	<!-- ************************ Compile ************************ -->
	<target description="build the project" name="build">
		<mkdir dir="${build.dir}" />
		<javac debug="true" destdir="${build.dir}" srcdir="${source.dir}" includeantruntime="false" source="${source.jre}" target="${target.jre}">
			<include name="**/*.java" />
			<!-- Exclude test packages -->
			<exclude name="breakthroughPP/test/**" />
			<classpath refid="userclasspath" />
		</javac>
	</target>

</project>
